{"version":3,"sources":["index.js"],"names":["Square","props","className","isWinning","onClick","value","Board","i","this","winningSquares","includes","squares","n","push","renderSquare","renderSquares","renderRows","React","Component","Game","state","history","Array","fill","stepNumber","xIsNext","isDescending","slice","length","calculateWinner","setState","concat","location","step","status","current","winner","moves","map","move","desc","jumpTo","player","line","handleClick","reverse","sortHistory","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.afae7011.chunk.js","sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\n\r\nfunction Square(props) {\r\n  return (\r\n    <button\r\n      className={\"square \" + (props.isWinning ? \"square--winning\" : null)}\r\n      onClick={props.onClick}\r\n    >\r\n      {props.value}\r\n    </button>\r\n  );\r\n}\r\n\r\nclass Board extends React.Component {\r\n  renderSquare(i) {\r\n    return (\r\n      <Square\r\n        isWinning={this.props.winningSquares.includes(i)}\r\n        key={\"square \" + i}\r\n        value={this.props.squares[i]}\r\n        onClick={() => this.props.onClick(i)}\r\n      />\r\n    );\r\n  }\r\n\r\n  renderSquares(n) {\r\n    let squares = [];\r\n    for (let i = n; i < n + 3; i++) {\r\n      squares.push(this.renderSquare(i));\r\n    }\r\n    return squares;\r\n  }\r\n\r\n  renderRows(i) {\r\n    return (\r\n      <div className=\"board-row\">\r\n        {this.renderSquares(i)}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.renderRows(0)}\r\n        {this.renderRows(3)}\r\n        {this.renderRows(6)}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Game extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      history: [\r\n        {\r\n          squares: Array(9).fill(null)\r\n        }\r\n      ],\r\n      stepNumber: 0,\r\n      xIsNext: true,\r\n      isDescending: true\r\n    };\r\n  }\r\n\r\n  handleClick(i) {\r\n    const locations = [\r\n      [1, 1],\r\n      [2, 1],\r\n      [3, 1],\r\n      [1, 2],\r\n      [2, 2],\r\n      [3, 2],\r\n      [1, 3],\r\n      [2, 3],\r\n      [3, 3]\r\n    ];\r\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n    const current = history[history.length - 1];\r\n    const squares = current.squares.slice();\r\n    if (calculateWinner(squares) || squares[i]) {\r\n      return;\r\n    }\r\n    squares[i] = this.state.xIsNext ? \"X\" : \"O\";\r\n    this.setState({\r\n      history: history.concat([\r\n        {\r\n          squares: squares,\r\n          location: locations[i]\r\n        }\r\n      ]),\r\n      stepNumber: history.length,\r\n      xIsNext: !this.state.xIsNext\r\n    });\r\n  }\r\n\r\n  jumpTo(step) {\r\n    this.setState({\r\n      stepNumber: step,\r\n      xIsNext: step % 2 === 0\r\n    });\r\n  }\r\n\r\n  sortHistory() {\r\n    this.setState({\r\n      isDescending: !this.state.isDescending\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const history = this.state.history;\r\n    const current = history[this.state.stepNumber];\r\n    const winner = calculateWinner(current.squares);\r\n\r\n    const moves = history.map((step, move) => {\r\n      const desc = move\r\n        ? \"Go to move #\" + move + \" @ \" + history[move].location\r\n        : \"Go to game start\";\r\n      return (\r\n        <li key={move}>\r\n          <button onClick={() => this.jumpTo(move)}>\r\n            {move == this.state.stepNumber ? <b>{desc}</b> : desc}\r\n          </button>\r\n        </li>\r\n      );\r\n    });\r\n\r\n    let status;\r\n    if (winner) {\r\n      status = \"Winner: \" + winner.player + \" @ \" + winner.line;\r\n    } else {\r\n      status = \"Next player: \" + (this.state.xIsNext ? \"X\" : \"O\");\r\n    }\r\n\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          <Board\r\n            winningSquares={winner ? winner.line : []}\r\n            squares={current.squares}\r\n            onClick={i => this.handleClick(i)}\r\n          />\r\n        </div>\r\n        <div className=\"game-info\">\r\n          <div>{status}</div>\r\n          <ol>{this.state.isDescending ? moves : moves.reverse()}</ol>\r\n          <button onClick={() => this.sortHistory()}>\r\n            Ordenar: {this.state.isDescending ? \"Descendiente\" : \"Ascendiente\"}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// ========================================\r\n\r\nReactDOM.render(<Game />, document.getElementById(\"root\"));\r\n\r\nfunction calculateWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6]\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return { player: squares[a], line: [a, b, c] };\r\n    }\r\n  }\r\n  return null;\r\n}"],"sourceRoot":""}